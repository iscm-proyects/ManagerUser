spring.application.name=ManagerUser
server.port=7061

# JWT
# La propiedad jwt.secret.key fue eliminada. No es necesaria para JWT con claves RSA (algoritmo RS256).

# Tiempo de expiración del token en milisegundos.
# 86400000 ms = 24 horas
# 28800000 ms = 8 horas
#jwt.time.expiration=14800000
# ~4.1 horas

# ===================================================================
# LOGGING CONFIGURATION
# ===================================================================

# --- Nivel de Log General ---
# Establece el nivel de log raíz. INFO es un buen valor por defecto para producción.
# Otros valores: TRACE, DEBUG, WARN, ERROR, FATAL, OFF
logging.level.root=DEBUG

# --- Niveles de Log Específicos ---
# Mantiene los logs de Spring en INFO para no generar ruido.
logging.level.org.springframework=INFO
# Puedes poner tus paquetes en DEBUG si necesitas más detalle durante el desarrollo.
logging.level.iscm.manageruser=DEBUG

# --- Patrón de Log para Consola y Archivo ---
# Añadimos el ID de correlación (%X{correlationId}) y otros detalles útiles.
# El patrón se aplica tanto a la consola como al archivo si no se especifica uno diferente.
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} [%X{correlationId:-}] - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} [%X{correlationId:-}] - %msg%n

# --- Configuración de Archivo de Log (Robusta y con Rotación) ---
# 1. Usa una ruta relativa para que funcione en cualquier sistema operativo.
#    El archivo se creará en una carpeta 'logs' junto a tu archivo .jar.
logging.file.name=./logs/iscm-usermanager.log

# 2. Habilita la rotación de archivos de log para evitar que crezcan indefinidamente.
# Tamaño máximo de cada archivo de log antes de rotar.
logging.logback.rollingpolicy.max-file-size=10MB

# Patrón para los nombres de los archivos archivados (rotados).
# %d{yyyy-MM-dd} -> Fecha, %i -> índice. Ej: app-2023-10-27.0.log
logging.logback.rollingpolicy.file-name-pattern=${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz

# Número máximo de días que se conservarán los archivos de log archivados.
logging.logback.rollingpolicy.max-history=360

# Tamaño total máximo de todos los archivos de log (nuevos y archivados).
# Ayuda a prevenir que los logs llenen el disco.
logging.logback.rollingpolicy.total-size-cap=3GB

# ===================================================================
# CORS CONFIGURATION
# ===================================================================
# Orígenes permitidos para las peticiones CORS. Separa múltiples orígenes con comas.
# Para desarrollo:
app.cors.allowed-origins=http://localhost:4200,http://localhost:3000
# Para producción, reemplázalo con el dominio de tu frontend:
# app.cors.allowed-origins=https://mi-aplicacion.com


# ===================================================================
# SPRINGDOC-OPENAPI (SWAGGER) CONFIGURATION
# ===================================================================

# --- Ruta de la UI de Swagger ---
# Por defecto es /swagger-ui.html, pero podemos personalizarla.
springdoc.swagger-ui.path=/api-docs

# --- Ruta de la especificación OpenAPI JSON ---
# Por defecto es /v3/api-docs.
springdoc.api-docs.path=/v3/api-docs

# --- Configuración para agrupar los endpoints en la UI ---
# Agrupa los endpoints por la clase del controlador.
springdoc.group-configs[0].group=user-management
springdoc.group-configs[0].paths-to-match=/api/v1/**

# ===================================================================
# CONEXION MYSQL SERVER
# ===================================================================

spring.datasource.url=jdbc:mysql://localhost:3306/user
spring.datasource.username=iscm
spring.datasource.password=15417431
spring.jpa.hibernate.ddl-auto=update
# ===================================================================
# KEYSTORE CONFIGURATION FOR JWT SIGNING
# ===================================================================

# Ubicación del archivo keystore en el classpath
jwt.keystore.location=classpath:keystore.p12

# Contraseña para acceder al archivo keystore (Debe coincidir con la usada en keytool)
jwt.keystore.password=iscm2025

# Alias de la clave que queremos usar dentro del keystore (Debe coincidir con la usada en keytool)
jwt.keystore.alias=iscmjwt

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:7061```
